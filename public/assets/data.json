{
  "presentation": [
    {
      "personal": [
        {
          "accost": "Olá Eu Sou",
          "name": "Fernando Matheus",
          "profession": "Engeneheiro de Software, Web Designer, Desenvolvedor Full Stack, Freelancer",
          "description": "Sou um Engenheiro de Software com experiência em desenvolvimento de sistemas complexos, tanto em back-end quanto em front-end. Minha atuação abrange o ciclo completo de desenvolvimento, desde a análise de requisitos, arquitetura de sistemas, até a implementação e testes.",
          "cv": "./assets/files/cv.pdf",
          "image": "./assets/images/personal/person.png",
          "socialMedia": [
            { "icon": "fab fa-github", "url": "https://github.com/fmatheus21" },
            { "icon": "fab fa-linkedin-in", "url": "https://www.linkedin.com/in/fmatheus" }
          ],
          "shape": [
            { "image": "./assets/images/shape/shape1.png", "depth": "0.20", "class": "hero-shape1" },
            { "image": "./assets/images/shape/shape2.png", "depth": "0.15", "class": "hero-shape2" },
            { "image": "./assets/images/shape/shape3.png", "depth": "0.30", "class": "hero-shape3" },
            { "image": "./assets/images/shape/shape4.png", "depth": "0.10", "class": "hero-shape4" }
          ]
        }
      ]
    }
  ],
  "services": [
    {
      "icon": "far fa-desktop",
      "title": "Front-End",
      "resume": "Desenvolvimento de interfaces interativas e responsivas, focado em experiência do usuário e design funcional.",
      "description": "<div><p>O <strong>front-end</strong> é a parte visual e interativa de uma aplicação ou site com a qual o usuário interage diretamente. É responsável por transformar dados do back-end em uma interface amigável e acessível, garantindo que a experiência seja intuitiva e eficiente.</p><p>Ele é construído utilizando três principais tecnologias:</p><ul><li><strong>HTML</strong> (HyperText Markup Language), que define a estrutura e o conteúdo das páginas;</li><li><strong>CSS</strong> (Cascading Style Sheets), que estiliza o layout e a apresentação visual;</li><li><strong>JavaScript</strong>, que adiciona interatividade e dinamismo, permitindo respostas a eventos como cliques e navegação.</li></ul><br/><p>Frameworks e bibliotecas como <strong>Angular</strong>, <strong>React</strong> e <strong>Vue.js</strong> são ferramentas populares que agilizam o desenvolvimento e oferecem uma estrutura modular e escalável.</p><p>O front-end também inclui otimização de performance, responsividade (para garantir que a aplicação funcione bem em diferentes dispositivos) e acessibilidade, para que pessoas com deficiências possam navegar facilmente. Assim, o front-end é crucial para a experiência do usuário (UX) e o design de interfaces (UI).</p></div>",
      "process": "<div><p>O processo de desenvolvimento <strong>front-end</strong> envolve várias etapas que transformam a ideia de um projeto em uma interface funcional e interativa. Ele pode ser dividido em diferentes fases:</p><ol><li><p><strong>Planejamento e Requisitos</strong>: O processo começa com a definição dos requisitos e o planejamento da interface. Nesta etapa, o time de design trabalha junto ao cliente ou stakeholders para entender as necessidades, funcionalidades e comportamento esperado.</p></li><li><p><strong>Wireframes e Design</strong>: Com base nos requisitos, os designers criam <strong>wireframes</strong> ou <strong>prototipagem</strong> para definir a estrutura e navegação da interface. Após aprovação, o design visual é desenvolvido usando ferramentas como Figma, Adobe XD ou Sketch.</p></li><li><p><strong>Escolha de Tecnologias</strong>: O desenvolvedor front-end decide quais tecnologias e frameworks utilizar. Ferramentas como <strong>Angular</strong>, <strong>React</strong> ou <strong>Vue.js</strong> podem ser escolhidas para construir interfaces dinâmicas, enquanto o <strong>HTML</strong>, <strong>CSS</strong> e <strong>JavaScript</strong> são fundamentais.</p></li><li><p><strong>Desenvolvimento</strong>: Nesta fase, o desenvolvedor escreve o código necessário para criar a interface. O <strong>HTML</strong> é usado para estruturar o conteúdo, o <strong>CSS</strong> para estilizar, e o <strong>JavaScript</strong> para adicionar interatividade. Frameworks como <strong>Bootstrap</strong> ou <strong>Tailwind CSS</strong> podem ser utilizados para acelerar a estilização e garantir responsividade.</p></li><li><p><strong>Integração com Back-end</strong>: O front-end é integrado ao back-end para consumir APIs e exibir dados dinâmicos. Ferramentas como <strong>Axios</strong> ou <strong>Fetch</strong> podem ser usadas para realizar requisições HTTP.</p></li><li><p><strong>Testes e Otimização</strong>: O código é testado para garantir que a interface funcione corretamente em diferentes dispositivos e navegadores (cross-browser testing). Ferramentas como <strong>Jest</strong> ou <strong>Cypress</strong> podem ser usadas para testes automatizados.</p></li><li><p><strong>Deploy</strong>: Após testes e revisões, a aplicação é lançada em um servidor ou plataforma de hospedagem como <strong>Netlify</strong>, <strong>Vercel</strong> ou <strong>GitHub Pages</strong>.</p></li><li><p><strong>Manutenção e Atualizações</strong>: O front-end continua recebendo ajustes e atualizações para melhorias de performance e correção de bugs.</p></li></ol><p>Essas etapas garantem que o front-end seja funcional, responsivo e atenda aos objetivos do projeto.</p></div>",
      "image": "./assets/images/services/front_end.png"
    },
    {
      "icon": "far fa-code",
      "title": "Back-End",
      "resume": "Desenvolvimento de sistemas robustos e escaláveis, garantindo desempenho, segurança e eficiência.",
      "description": "<div><p>O <strong>back-end</strong> refere-se à parte de um sistema que lida com a lógica do servidor, banco de dados, autenticação e comunicação entre o servidor e o front-end. Ele processa e gerencia as requisições que os usuários fazem na interface (front-end) e responde com dados apropriados.</p><p>O desenvolvimento back-end geralmente envolve o uso de linguagens de programação como <strong>Java</strong>, <strong>Node.js</strong>, <strong>Python</strong>, <strong>Ruby</strong>, entre outras. Também inclui frameworks que facilitam o desenvolvimento, como <strong>Spring Boot</strong> (para Java), <strong>Express</strong> (para Node.js) e <strong>Django</strong> (para Python).</p><p>O back-end é responsável por tarefas cruciais, como:</p><ol><li><strong>Gerenciamento de Bancos de Dados</strong>: Interage com bancos de dados (MySQL, MongoDB, PostgreSQL) para armazenar e recuperar dados conforme solicitado.</li><li><strong>APIs e Integrações</strong>: Desenvolve e gerencia APIs que permitem a comunicação entre o front-end e outros serviços ou sistemas externos.</li><li><strong>Segurança</strong>: Implementa práticas como autenticação, controle de acesso e criptografia de dados.</li><li><strong>Gerenciamento de Sessões e Autenticação</strong>: Lida com logins de usuários, autenticação de tokens e controle de permissões.</li><li><strong>Escalabilidade e Performance</strong>: Optimiza a aplicação para suportar grandes volumes de dados e acessos simultâneos.</li></ol><p>Esses processos garantem que os sistemas sejam eficientes, seguros e funcionem sem falhas para o usuário final.</p></div>",
      "process": "<div><p>O processo de desenvolvimento <strong>back-end</strong> é uma sequência de etapas que visa construir a lógica e as funcionalidades de uma aplicação web ou sistema. Esse processo envolve planejamento, implementação, testes e otimizações para garantir que a aplicação seja eficiente e segura. Abaixo estão as principais fases do desenvolvimento <strong>back-end</strong>:</p><ol><li><p><strong>Planejamento e Arquitetura</strong>: Define-se a estrutura e os requisitos do sistema, como bancos de dados, serviços, escalabilidade e integrações. A arquitetura escolhida pode ser monolítica, microservices ou baseada em eventos.</p></li><li><p><strong>Escolha das Tecnologias</strong>: Seleciona-se a linguagem de programação <strong>(Java, Python, Node.js, etc.)</strong> e o framework <strong>(Spring Boot, Django, Express, etc.)</strong> que melhor se adapta às necessidades do projeto.</p></li><li><p><strong>Configuração do Banco de Dado</strong>: Escolhe-se o banco de dados (relacional como <strong>MySQL</strong> ou não-relacional como <strong>MongoDB</strong>) e se define como os dados serão modelados e armazenados.</p></li><li><p><strong>Criação das APIs</strong>: São desenvolvidas APIs <strong>(REST ou GraphQL)</strong> que permitem a comunicação entre o <strong>front-end</strong> e o <strong>back-end</strong>, permitindo que dados sejam trocados de maneira estruturada.</p></li><li><p><strong>Gerenciamento de Segurança</strong>: Implementa-se autenticação, autorização, criptografia de dados e outras práticas de segurança para proteger as informações dos usuários e do sistema.</p></li><li><p><strong>Teste e Depuração</strong>: São realizados testes unitários, de integração e de carga para verificar o desempenho do sistema, identificar bugs e otimizar o código.</p></li><li><p><strong>Otimização e Escalabilidade</strong>: O sistema é otimizado para lidar com um grande número de usuários simultâneos, e ajustes de performance são feitos para garantir uma boa experiência do usuário.</p></li><li><p><strong>Desdobramento e Manutenção</strong>: Após o desenvolvimento, o sistema é implantado em servidores ou plataformas em nuvem (como <strong>AWS</strong> ou <strong>Azure</strong>) e monitorado para manutenção contínua.</p></li></ol><p>Esses processos garantem que o <strong>back-end</strong> seja robusto, seguro e capaz de atender as demandas do sistema.</p></div>",
      "image": "./assets/images/services/back_end.png"
    },
    {
      "icon": "far fa-browser",
      "title": "UI/UX Design",
      "resume": "Criação de experiências intuitivas e visuais, alinhando estética e funcionalidade para usuários.",
      "description": "<div><p>UI/UX Design é a combinação de duas áreas essenciais no desenvolvimento de produtos digitais:</p><ol><li><p><strong>UI Design (User Interface Design)</strong> se refere à criação da interface visual com a qual o usuário interage. Ele envolve a escolha de cores, tipografias, botões, ícones, e layouts, visando a estética e a funcionalidade do produto. O objetivo é tornar a experiência visual intuitiva, consistente e atraente para o usuário.</p></li><li><p><strong>UX Design (User Experience Design)</strong> concentra-se na jornada do usuário ao utilizar o produto. Ele abrange a pesquisa de usuários, prototipagem e testes, buscando compreender as necessidades, desejos e comportamentos das pessoas. O foco é garantir que o produto seja fácil de usar, eficiente e atenda às expectativas do usuário.</p></li></ol><p>Essas duas áreas se complementam, onde a UI é responsável por “como o produto parece” e a UX por “como ele funciona”. Um bom UI/UX Design é fundamental para o sucesso de qualquer aplicação ou site, pois impacta diretamente a satisfação do usuário e, consequentemente, os resultados do negócio.</p></div>",
      "process": "<div><p>O processo de desenvolvimento de UI/UX Design envolve várias etapas, desde a pesquisa inicial até a implementação e testes contínuos. Aqui está um resumo do fluxo:</p><ol><li><p><strong>Pesquisa de Usuário (User Research):</strong> Esta fase inicial envolve entrevistas, pesquisas e análise de dados para entender as necessidades, expectativas e problemas dos usuários. A partir dessas informações, os designers criam personas, que representam os perfis de usuários típicos.</p></li><li><p><strong>Mapeamento de Jornada do Usuário (User Journey Mapping):</strong> Com base nas personas, é mapeada a jornada que o usuário percorre ao interagir com o produto. Isso inclui identificar os pontos de contato e os desafios que podem enfrentar.</p></li><li><p><strong>Arquitetura da Informação (Information Architecture):</strong> Organizar o conteúdo e as funcionalidades de forma lógica e intuitiva. Essa estruturação facilita a navegação do usuário pelo produto.</p></li><li><p><strong>Wireframes e Prototipagem:</strong> Nesta fase, os designers criam esboços de baixa fidelidade (wireframes) para definir a estrutura das páginas e a disposição dos elementos. Em seguida, criam protótipos interativos para testar a navegação e a funcionalidade.</p></li><li><p><strong>Design Visual (UI Design):</strong> O design visual começa com a escolha de paletas de cores, tipografia, ícones e elementos gráficos que transmitam a identidade da marca. A estética é criada de forma a ser atrativa, mantendo a funcionalidade intuitiva.</p></li><li><p><strong>Testes de Usabilidade:</strong> Depois de protótipos prontos, são realizados testes com usuários reais para identificar problemas e obter feedback. O objetivo é verificar se a interface é fácil de usar e atende às expectativas dos usuários.</p></li><li><p><strong>Desenvolvimento e Implementação:</strong> Os designers colaboram com desenvolvedores para implementar as soluções de design na prática. Ajustes são feitos durante essa fase para garantir que o design funcione bem no ambiente real.</p></li><li><p><strong>Ajustes e Iteração:</strong> Após o lançamento, a experiência é monitorada e o feedback dos usuários é coletado para realizar ajustes. O design é aprimorado continuamente com base no comportamento real dos usuários.</p></li></ol><p>Este ciclo é frequentemente repetido para garantir que o produto evolua e atenda às novas necessidades dos usuários.</p></div>",
      "image": "./assets/images/services/ui_ux.png"
    },
    {
      "icon": "far fa-mobile",
      "title": "Mobile",
      "resume": "Desenvolvimento de apps móveis rápidos e responsivos, garantindo alta performance em diversas plataformas.",
      "description": "<div><p>O <strong>desenvolvimento mobile</strong> é o processo de criação de aplicativos para dispositivos móveis, como smartphones e tablets. Esse desenvolvimento envolve o uso de tecnologias específicas para construir aplicativos que sejam eficientes, intuitivos e otimizados para diversas plataformas móveis. Existem duas abordagens principais: <strong>desenvolvimento nativo</strong> e <strong>desenvolvimento multiplataforma</strong>.</p><ol><li><p><strong>Desenvolvimento nativo</strong>: Cada plataforma (iOS ou Android) possui suas próprias linguagens e ferramentas de desenvolvimento. Para iOS, utiliza-se Swift ou Objective-C, enquanto para Android, utiliza-se Kotlin ou Java. Aplicativos nativos oferecem desempenho superior, maior integração com funcionalidades do dispositivo, e experiência de usuário otimizada, mas requerem mais esforço para manter duas bases de código distintas.</p></li><li><p><strong>Desenvolvimento multiplataforma</strong>: Ferramentas como <strong>React Native</strong>, <strong>Flutter</strong> e <strong>Xamarin</strong> permitem o desenvolvimento de um único código base para várias plataformas. Isso reduz o tempo e os custos de desenvolvimento, mas pode apresentar algumas limitações em termos de desempenho e acesso a funcionalidades nativas do dispositivo.</p></li></ol><p>O processo de desenvolvimento mobile inclui: <strong>definição de requisitos</strong>, <strong>prototipagem de interface</strong>, <strong>desenvolvimento de funcionalidades</strong>, <strong>testes rigorosos</strong> (para garantir compatibilidade em diferentes dispositivos e versões de sistema), e <strong>publicação em lojas de aplicativos</strong> (como Google Play e App Store).</p></div>",
      "process": "<div><p>O processo de desenvolvimento mobile envolve várias etapas, que podem ser resumidas da seguinte forma:</p><ol><li><p><strong>Planejamento e Pesquisa</strong>: O processo começa com a definição dos objetivos do aplicativo, o público-alvo, os recursos necessários e a escolha da plataforma (iOS, Android ou ambas). Essa fase também inclui a pesquisa de mercado e análise de concorrentes.</p></li><li><p><strong>Definição de Requisitos</strong>: Nesta etapa, os requisitos técnicos e funcionais são definidos com base nas necessidades dos usuários e nas funcionalidades desejadas. Isso inclui a escolha entre aplicativos nativos, híbridos ou web apps, além da definição de APIs necessárias para integrar com o back-end.</p></li><li><p><strong>Wireframing e Design de Interface (UI/UX)</strong>: Um protótipo ou wireframe é criado para visualizar o layout do aplicativo e a experiência do usuário (UX). Designers criam a interface gráfica (UI), com foco na aparência, acessibilidade e navegação intuitiva.</p></li><li><p><strong>Desenvolvimento</strong>: O processo de codificação começa. Se for nativo, a equipe pode usar <strong>Swift</strong> para iOS e <strong>Kotlin</strong> para Android. No caso de apps híbridos, frameworks como <strong>React Native</strong> ou <strong>Flutter</strong> são utilizados. A equipe de front-end e back-end trabalha em conjunto para garantir que a interface do usuário e as funcionalidades do servidor sejam bem integradas.</p></li><li><p><strong>Teste e Qualidade</strong>: Depois que o aplicativo é desenvolvido, ele passa por testes rigorosos, incluindo testes de funcionalidade, performance, segurança, e testes de compatibilidade em diferentes dispositivos e sistemas operacionais.</p></li><li><p><strong>Lançamento e Publicação</strong>: Após a fase de testes, o aplicativo é enviado para as lojas (Google Play e Apple App Store) ou distribuído de outras formas. É necessário seguir as diretrizes das lojas e realizar os ajustes necessários com base nas políticas de cada plataforma.</p></li><li><p><strong>Manutenção e Atualizações</strong>: Após o lançamento, o desenvolvimento mobile continua com correções de bugs, atualizações de segurança e novos recursos para melhorar a experiência do usuário e manter o aplicativo competitivo.</p></li></ol><p>Esse processo é iterativo, com feedback constante dos usuários e a necessidade de ajustes contínuos conforme novas tecnologias e demandas surgem.</p></div>",
      "image": "./assets/images/services/mobile.png"
    }
  ],
  "about": {
    "name": "Fernando Matheus",
    "year": "1982",
    "occupation": "Eng. de Software",
    "phone": "+55 21 98196-4019",
    "email": "info@fmatheus.com.br",
    "nationality": " Brasil",
    "description": "Sou um Engenheiro de Software com experiência em desenvolvimento de sistemas complexos, tanto em back-end quanto em front-end. Minha atuação abrange o ciclo completo de desenvolvimento, desde a análise de requisitos, arquitetura de sistemas, até a implementação e testes.",
    "signature": "./assets/images/about/signature.png",
    "image": "./assets/images/about/about-img.jpg",
    "cv": "./assets/files/cv.pdf"
  }
}
